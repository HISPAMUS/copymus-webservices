{"version":3,"sources":["components/layout/InfoModal.js","components/layout/Header.js","components/layout/Footer.js","components/Home.js","components/scanner/LoadingScreen.js","components/scanner/MessageScreen.js","components/scanner/ScoreScreen.js","components/scanner/ScanScreen.js","Api.js","components/scanner/UploadScreen.js","components/scanner/Scanner.js","App.js","serviceWorker.js","index.js","images/logo.png"],"names":["InfoModal","props","react_default","a","createElement","Modal_default","show","onHide","Header","closeButton","Title","Body","className","_useState","useState","_useState2","Object","slicedToArray","showInfo","setShowInfo","small","Navbar_default","variant","bg","lib","to","Brand","alt","src","logo","height","Nav_default","Button_default","onClick","react_router_dom","Footer","href","Home","size","block","LoadingScreen","style","minWidth","width","Message","concat","role","text","onReset","ScoreScreen","zoom","setZoom","inputFile","React","createRef","htmlFor","title","type","id","name","accept","ref","onChange","current","files","length","onSelect","score","author","transform","png","ScanScreen","undefined","image","setImage","_useState3","x","y","_useState4","crop","setCrop","encodeBlob","blob","reader","FileReader","onloadend","base64data","result","onUpload","readAsDataURL","Fragment","canvas","document","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","toBlob","ReactCrop_default","onImageLoaded","RANDOMURL","UPLOADURL","UploadScreen","progress","setProgress","onError","uploadData","useEffect","data","replace","db","Axios","post","headers","Content-Type","onUploadProgress","p","loaded","total","then","catch","error","ProgressBar_default","animated","now","ScannerState","LOADING_SCORE","LOAD_ERROR","LOADED_SCORE","LOADED_IMAGE","CROPPED_IMAGE","UPLOAD_ERROR","UPLOADED_IMAGE","RESET","initialState","loading","selectedImage","croppedImage","finished","reducer","state","action","objectSpread","payload","Error","Scanner","_useReducer","useReducer","_useReducer2","dispatch","reset","loadScore","fetch","response","status","json","console","file","onload","App","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.e337462f.chunk.js","sourcesContent":["import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\n\nexport default function InfoModal(props) {\n  return (\n    <Modal show={props.show} onHide={props.onHide}>\n      <Modal.Header closeButton>\n        <Modal.Title>Escáner de partituras manuscritas</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h5>Información del proyecto</h5>\n        <p className=\"text-justify\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n          consectetur quis leo eu cursus. Curabitur sit amet augue nec sapien\n          posuere sodales. Aenean at egestas massa, sed hendrerit libero. Sed\n          malesuada imperdiet purus, sed commodo leo fermentum at. Suspendisse\n          vehicula rutrum dolor. Quisque posuere ipsum elit, et volutpat ligula\n          volutpat posuere. Fusce pulvinar eros vel purus congue, non hendrerit\n          arcu hendrerit. Vestibulum id vestibulum nulla. Proin quam orci,\n          dictum eleifend nunc in, sodales maximus turpis. Nullam pretium sit\n          amet tellus ac facilisis. Donec in felis ligula. Fusce vestibulum\n          lorem vitae lectus pharetra interdum. Etiam sed pharetra quam.\n        </p>\n        <h5>Instrucciones de uso</h5>\n        <p className=\"text-justify\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed\n          consectetur quis leo eu cursus. Curabitur sit amet augue nec sapien\n          posuere sodales. Aenean at egestas massa, sed hendrerit libero. Sed\n          malesuada imperdiet purus, sed commodo leo fermentum at. Suspendisse\n          vehicula rutrum dolor. Quisque posuere ipsum elit, et volutpat ligula\n          volutpat posuere. Fusce pulvinar eros vel purus congue, non hendrerit\n          arcu hendrerit. Vestibulum id vestibulum nulla. Proin quam orci,\n          dictum eleifend nunc in, sodales maximus turpis. Nullam pretium sit\n          amet tellus ac facilisis. Donec in felis ligula. Fusce vestibulum\n          lorem vitae lectus pharetra interdum. Etiam sed pharetra quam.\n        </p>\n      </Modal.Body>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport logo from \"../../images/logo.png\";\nimport InfoModal from \"./InfoModal\";\n\nexport default function Header(props) {\n  const [showInfo, setShowInfo] = useState(false);\n\n  return (\n    <header className=\"w-100 my-0\">\n      <InfoModal show={showInfo} onHide={() => setShowInfo(false)} />\n\n      {props.small ? (\n        <Navbar variant=\"light\" bg=\"white\" className=\"pt-1 pb-0 px-0\">\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>\n              <img\n                alt=\"HISPAMUS\"\n                src={logo}\n                height=\"25\"\n                className=\"d-inline-block\"\n              />\n            </Navbar.Brand>\n          </LinkContainer>\n          <Nav className=\"ml-auto\">\n            <Button variant=\"link\" onClick={() => setShowInfo(true)}>\n              <i className=\"fas fa-info-circle fa-2x\" />\n            </Button>\n          </Nav>\n        </Navbar>\n      ) : (\n        <div className=\"row my-3\">\n          <div className=\"col-9\">\n            <Link to=\"/\">\n              <img className=\"img-fluid\" src={logo} alt=\"Logo\" />\n            </Link>\n          </div>\n          <div className=\"col-3 d-flex justify-content-end align-items-center\">\n            <Button variant=\"link\" onClick={() => setShowInfo(true)}>\n              <i className=\"fas fa-info-circle fa-2x info-blink\" />\n            </Button>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"w-100 mt-3 text-center border-top pt-3\">\n      <p>\n        <a href=\"https://grfia.dlsi.ua.es\" className=\"text-dark\">\n          © GRFIA - Universidad de Alicante\n        </a>\n      </p>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport Header from \"./layout/Header\";\nimport Footer from \"./layout/Footer\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Header />\n\n      <div className=\"row px-3\">\n        <h4>Escáner de partituras manuscritas</h4>\n      </div>\n      <div className=\"row mt-3\">\n        <div className=\"col-12\">\n          <LinkContainer to=\"/scan\">\n            <Button variant=\"primary\" size=\"lg\" block>\n              <i className=\"fas fa-scroll\" />\n              &nbsp;Copiar una partitura\n            </Button>\n          </LinkContainer>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function LoadingScreen() {\n  return (\n    <div className=\"w-100 mt-2\">\n      <div className=\"d-flex flex-column flex-sm-row justify-content-sm-end\">\n        <div\n          className=\"d-inline-block mb-3 mx-sm-1 skeleton\"\n          style={{minWidth: '15ex'}}\n        >\n          &nbsp;\n        </div>\n        <div\n          className=\"d-inline-block mb-3 mx-sm-1 skeleton\"\n          style={{minWidth: '15ex'}}\n        >\n          &nbsp;\n        </div>\n      </div>\n      <div className=\"d-block mr-3 skeleton\" style={{width: '25ex'}}>\n        &nbsp;\n      </div>\n      <div className=\"d-block w-100 mt-4 skeleton\" style={{height: '100px'}}>\n        &nbsp;\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Message(props) {\n  return (\n    <div className=\"w-100 my-3\">\n      <div className={`alert alert-${props.variant}`} role=\"alert\">\n        {props.text}\n      </div>\n\n      <button\n        className=\"btn btn-primary w-100\"\n        onClick={props.onReset}\n      >\n        Volver a empezar\n      </button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function ScoreScreen(props) {\n  const [zoom, setZoom] = useState(false);\n  const inputFile = React.createRef();\n\n  function toggleZoom() {\n    setZoom(!zoom);\n  }\n\n  function handleFileSelected() {\n    if (inputFile.current.files && inputFile.current.files.length > 0) {\n      props.onSelect(inputFile.current.files[0]);\n    }\n  }\n\n  return (\n    <div className=\"w-100 mt-2\">\n      <div className=\"d-flex flex-column flex-sm-row justify-content-sm-end\">\n        <button\n          className=\"btn btn-primary mb-3 mx-1\"\n          onClick={props.onReset}\n        >\n          <i className=\"fas fa-sync\" /> Cargar otra\n        </button>\n        <label\n          className=\"btn btn-primary mb-3 mx-1\"\n          htmlFor=\"inputImage\"\n          title=\"Escanear\"\n        >\n          <input\n            type=\"file\"\n            id=\"inputImage\"\n            className=\"sr-only\"\n            name=\"file\"\n            accept=\"image/*\"\n            ref={inputFile}\n            onChange={handleFileSelected}\n          />\n          <i className=\"fas fa-camera\" /> Escanear versión manuscrita\n        </label>\n      </div>\n      <h5>\n        {props.score.title} ({props.score.author})\n      </h5>\n      <div className=\"overflow-auto mt-3\" style={{ transform: \"rotate(0)\" }}>\n        <div className=\"d-inline-block\">\n          <button\n            className=\"btn btn-link stretched-link text-dark\"\n            onClick={toggleZoom}\n          >\n            <i className={\"fas fa-search-\" + (zoom ? \"minus\" : \"plus\")} />\n          </button>\n        </div>\n        <img\n          className={zoom ? \"\" : \"img-fluid\"}\n          alt=\"score\"\n          src={`data:image/png;base64,${props.score.png}`}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport ReactCrop from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\n\nexport default function ScanScreen(props) {\n  const [image, setImage] = useState(undefined);\n  const [crop, setCrop] = useState({\n    x: 10,\n    y: 10,\n    width: 100,\n    height: 100\n  });\n\n  function encodeBlob(blob) {\n    var reader = new FileReader();\n    reader.onloadend = function() {\n      let base64data = reader.result;\n      props.onUpload(base64data);\n    };\n    reader.readAsDataURL(blob);\n  }\n\n  function getCroppedImage() {\n    if (image) {\n      const canvas = document.createElement(\"canvas\");\n      const scaleX = image.naturalWidth / image.width;\n      const scaleY = image.naturalHeight / image.height;\n      const width = crop.width * scaleX;\n      const height = crop.height * scaleY;\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext(\"2d\");\n\n      ctx.drawImage(\n        image,\n        crop.x * scaleX,\n        crop.y * scaleY,\n        width,\n        height,\n        0,\n        0,\n        width,\n        height\n      );\n\n      canvas.toBlob(encodeBlob, 'image/png');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"w-100 mt-3\">\n        <button\n          className=\"btn btn-primary btn-block mb-3\"\n          onClick={getCroppedImage}\n        >\n          Enviar\n        </button>\n        <ReactCrop\n          src={props.image}\n          crop={crop}\n          onImageLoaded={(image, crop) => setImage(image)}\n          onChange={crop => {\n            setCrop(crop);\n          }}\n          alt=\"imagen\"\n        />\n      </div>\n    </>\n  );\n}\n","export const RANDOMURL = '/api/scanner/random/test';\nexport const UPLOADURL = '/api/scanner/upload';\n","import React, { useState, useEffect } from \"react\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Axios from \"axios\";\n\nimport { UPLOADURL } from \"../../Api\";\n\nexport default function UploadScreen(props) {\n  const [progress, setProgress] = useState(25);\n  const [uploadData] = useState({\n    image: props.image,\n    score: props.score,\n    onUpload: props.onUpload,\n    onError: props.onError\n  });\n\n  useEffect(() => {\n      let data = {\n        png: uploadData.image.replace(\"data:image/png;base64,\", \"\"),\n        id: uploadData.score.id,\n        db: uploadData.score.db\n      };\n\n      Axios.post(UPLOADURL, data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        onUploadProgress: p => {\n          setProgress(25 + (p.loaded / p.total) * 75);\n        }\n      })\n        .then(data => {\n          uploadData.onUpload();\n        })\n        .catch(error => {\n          uploadData.onError();\n        });\n\n  }, [uploadData]);\n\n  return (\n    <>\n      <ProgressBar animated now={progress} className=\"my-3\" />\n      <img src={props.image} alt=\"\" className=\"img-fluid d-block mx-auto\" />\n    </>\n  );\n}\n","import React, { useEffect, useReducer } from \"react\";\n\nimport Header from \"../layout/Header\";\nimport Footer from \"../layout/Footer\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport MessageScreen from \"./MessageScreen\";\nimport ScoreScreen from \"./ScoreScreen\";\nimport ScanScreen from \"./ScanScreen\";\nimport UploadScreen from \"./UploadScreen\";\n\nimport { RANDOMURL } from \"../../Api\";\n\nexport const ScannerState = {\n  LOADING_SCORE: \"loading_score\",\n  LOAD_ERROR: \"load_error\",\n  LOADED_SCORE: \"loaded_score\",\n  LOADED_IMAGE: \"loaded_image\",\n  CROPPED_IMAGE: \"cropped_image\",\n  UPLOAD_ERROR: \"upload_error\",\n  UPLOADED_IMAGE: \"uploaded_image\",\n  RESET: \"reset\"\n};\n\nconst initialState = {\n  loading: false,\n  error: false,\n  score: undefined,\n  selectedImage: undefined,\n  croppedImage: undefined,\n  finished: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ScannerState.LOADING_SCORE:\n      return { ...state, loading: true };\n    case ScannerState.LOAD_ERROR:\n      return { ...state, loading: true, error: true };\n    case ScannerState.LOADED_SCORE:\n      return { ...state, loading: false, error: false, score: action.payload };\n    case ScannerState.LOADED_IMAGE:\n      return { ...state, selectedImage: action.payload };\n    case ScannerState.CROPPED_IMAGE:\n      return { ...state, croppedImage: action.payload };\n    case ScannerState.UPLOAD_ERROR:\n      return { ...state, error: true };\n    case ScannerState.UPLOADED_IMAGE:\n      return { ...initialState, finished: true };\n    case ScannerState.RESET:\n      return initialState;\n    default:\n      throw new Error();\n  }\n}\n\nexport default function Scanner() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  function reset() {\n    dispatch({ type: ScannerState.RESET });\n    loadScore();\n  }\n\n  function loadScore() {\n    dispatch({ type: ScannerState.LOADING_SCORE });\n\n    fetch(RANDOMURL)\n      .then(response => {\n        if (response.status === 200) return response.json();\n        else throw new Error(\"No se puede contactar con el servidor\");\n      })\n      .then(response => {\n        dispatch({ type: ScannerState.LOADED_SCORE, payload: response });\n      })\n      .catch(error => {\n        dispatch({ type: ScannerState.LOAD_ERROR });\n        console.error(error);\n      });\n  }\n\n  function loadSelectedImage(file) {\n    let reader = new FileReader();\n    reader.onload = () => {\n      dispatch({ type: ScannerState.LOADED_IMAGE, payload: reader.result });\n    };\n    reader.readAsDataURL(file);\n  }\n\n  function uploadCroppedImage(image) {\n    dispatch({ type: ScannerState.CROPPED_IMAGE, payload: image });\n  }\n\n  useEffect(() => {\n    loadScore();\n  }, []);\n\n  return (\n    <>\n      <Header small />\n      {state.loading && !state.error && <LoadingScreen />}\n      {state.loading && state.error && (\n        <MessageScreen\n          variant=\"danger\"\n          text=\"Ha ocurrido un error al cargar la imagen\"\n          onReset={reset}\n        />\n      )}\n      {state.score && !state.selectedImage && (\n        <ScoreScreen\n          score={state.score}\n          onSelect={loadSelectedImage}\n          onReset={reset}\n        />\n      )}\n      {state.selectedImage && !state.croppedImage && (\n        <ScanScreen image={state.selectedImage} onUpload={uploadCroppedImage} />\n      )}\n      {state.croppedImage && !state.error && (\n        <UploadScreen\n          image={state.croppedImage}\n          score={state.score}\n          onUpload={() => dispatch({ type: ScannerState.UPLOADED_IMAGE })}\n          onError={() => dispatch({ type: ScannerState.UPLOAD_ERROR })}\n        />\n      )}\n      {state.croppedImage && state.error && (\n        <MessageScreen\n          variant=\"danger\"\n          text=\"Ha ocurrido un error al enviar la imagen\"\n          onReset={reset}\n        />\n      )}\n      {state.finished && (\n        <MessageScreen\n          variant=\"success\"\n          text=\"¡Gracias por colaborar!\"\n          onReset={reset}\n        />\n      )}\n      <Footer />\n    </>\n  );\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Scanner from './components/scanner/Scanner';\n\nfunction App() {\n  return (\n    <Router basename=\"/copymus/scanner\">\n      <div className=\"container-fluid\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/scan\" component={Scanner} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.cfbdceaa.png\";"],"sourceRoot":""}