openapi: 3.0.0
info:
  version: 0.1.0
  title: CopyMus webservices
servers:
  - url: https://grfia.dlsi.ua.es/copymus
    description: Production server
  - url: http://localhost:8080
    description: Development server
paths:
  /users:
    get:
      summary: Lists all registered users
      responses:
        '200':
          description: JSON array with users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Users"
    post:
      summary: Creates a new user
      description: username must be unique (case-insensitive)
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '409':
          description: User already exists
  /users/{id}:
    get:
      summary: Returns a user given its ID
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: User does not exist
    put:
      summary: Changes the username
      description: username must be unique (case-insensitive)
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: User data
        required: true
        content:
          application/json:
            schema:
              required:
                - username
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Username changed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '404':
          description: User does not exist
        '409':
          description: User already exists
    delete:
      summary: Deletes a user given its ID
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted
        '404':
          description: User does not exist
components:
  schemas:
    User:
      required:
        - id
        - username
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
